function X_redist=redistribution(X,nb_part,d,poids,...nb_descend)% les poids en sortie doivent etre mis a 1/nb_part% on sort X_redist  le vecteur de longueur nb_descend  correspondant% a un tirage multinomial avec le vecteur des poids.  X_redist est forme% par des copies d'elements de X (entree) %-----------------------------------------------------------------% X:vecteur des particules entrantes dim=(d,nb_part)% poids : vecteur des poids des particules dim=(1,nb_part)% nb_part = nb de particules dim=(1,1)% nb_descend : nb de particules sortantes (les plus probables) dim=(d,nb_descend)% d dimension du vecteur d'etat dim=(1,1)%-----------------------------------------------------------------% mise a zero des tableaux pour l'option mex : mcc -rihU_tild=zeros(1,nb_descend);expo=zeros(1,nb_descend);alpha=zeros(1,nb_descend);u_ord=zeros(1,nb_descend);uu=zeros(1,nb_descend+1);X_redist=zeros(d,nb_descend);% calcul des poids cumulesp=cumsum(poids);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%generation d'un echantillon uniforme ordonneU_tild=rand(1,nb_descend);expo=[nb_descend:-1:1];expo=1./expo;alpha=U_tild.^expo;u_ord=cumprod(alpha);u_ord(nb_descend:-1:1)=u_ord;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% on compte le nb d'uniformes qui tombent dans les intervallesuu=[u_ord 2];i=1;for j=1:nb_part	while uu(i)<p(j)		X_redist(:,i)=X(:,j);		i=i+1;	endend